{"ast":null,"code":"import { useEffect } from \"react\";\nimport { arrayOf, shape, string, oneOfType, number } from \"prop-types\";\n\nfunction _toConsumableArray(a) {\n  return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) {\n      c[b] = a[b];\n    }\n\n    return c;\n  }\n}\n\nfunction _iterableToArray(a) {\n  if (Symbol.iterator in Object(a) || \"[object Arguments]\" === Object.prototype.toString.call(a)) return Array.from(a);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar createElement = function createElement(a) {\n  var b = a.reduce(function (a, b) {\n    var c = b.name.replace(\" \", \"+\"),\n        d = b.weight && \":\".concat(b.weight.join(\",\")) || \"\";\n    return [].concat(_toConsumableArray(a), [\"\".concat(c).concat(d)]);\n  }, []).join(\"|\"),\n      c = document.createElement(\"link\");\n  return c.rel = \"stylesheet\", c.href = \"https://fonts.googleapis.com/css?family=\".concat(b), c;\n},\n    ReactFontLoader = function ReactFontLoader(a) {\n  var b = a.fonts;\n  return useEffect(function () {\n    var a = createElement(b);\n    return document.head.appendChild(a), function () {\n      return document.head.removeChild(a);\n    };\n  }, []), null;\n};\n\nReactFontLoader.propTypes = {\n  fonts: arrayOf(shape({\n    name: string.isRequired,\n    weights: arrayOf(oneOfType([string, number]))\n  })).isRequired\n};\nexport default ReactFontLoader;","map":null,"metadata":{},"sourceType":"module"}