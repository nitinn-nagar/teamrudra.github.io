{"ast":null,"code":"import _slicedToArray from \"/home/antariksh/Rudra/git_repo/rudraweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/antariksh/Rudra/git_repo/rudraweb/src/views/Components/Sections/SectionFooter.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '50vw',\n      marginLeft: '10vw'\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    signupBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    header: {\n      textAlign: 'center',\n      background: '#212121',\n      color: '#fff'\n    },\n    card: {\n      marginTop: theme.spacing(10)\n    }\n  });\n});\n\nvar SectionFooter = function SectionFooter(props) {\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isButtonDisabled = _useState6[0],\n      setIsButtonDisabled = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      helperText = _useState8[0],\n      setHelperText = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  useEffect(function () {\n    if (username.trim() && password.trim()) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [username, password]);\n\n  var handleSignup = function handleSignup() {\n    props.signupPage(true);\n  };\n\n  var handleLogin = function handleLogin(e) {\n    e.preventDefault();\n  };\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    title: \"Mail Us Your Queries\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"username\",\n    type: \"email\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    margin: \"normal\",\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyPress(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    helperText: helperText,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyPress(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.loginBtn,\n    onClick: handleLogin,\n    disabled: isButtonDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.signupBtn,\n    onClick: handleSignup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")))));\n};\n\nexport default SectionFooter;","map":{"version":3,"sources":["/home/antariksh/Rudra/git_repo/rudraweb/src/views/Components/Sections/SectionFooter.js"],"names":["React","useState","useEffect","TextField","createStyles","makeStyles","Theme","Card","CardContent","CardActions","Button","CardHeader","useStyles","theme","container","display","flexWrap","width","marginLeft","loginBtn","marginTop","spacing","flexGrow","signupBtn","header","textAlign","background","color","card","SectionFooter","props","classes","username","setUsername","password","setPassword","isButtonDisabled","setIsButtonDisabled","helperText","setHelperText","error","setError","trim","handleSignup","signupPage","handleLogin","e","preventDefault","handleKeyPress","keyCode","which","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '50vw',\n            marginLeft: '10vw'\n        },\n        loginBtn: {\n            marginTop: theme.spacing(2),\n            flexGrow: 1\n        },\n        signupBtn: {\n            marginTop: theme.spacing(2),\n            flexGrow: 1\n        },\n        header: {\n            textAlign: 'center',\n            background: '#212121',\n            color: '#fff'\n        },\n        card: {\n            marginTop: theme.spacing(10)\n        }\n\n    }),\n);\n\nconst SectionFooter = (props) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [helperText, setHelperText] = useState('');\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        if (username.trim() && password.trim()) {\n            setIsButtonDisabled(false);\n        } else {\n            setIsButtonDisabled(true);\n        }\n    }, [username, password]);\n\n    const handleSignup = () => {\n        props.signupPage(true);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n    };\n\n    const handleKeyPress = (e: any) => {\n        if (e.keyCode === 13 || e.which === 13) {\n            isButtonDisabled || handleLogin();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n                <Card className={classes.card}>\n                    <CardHeader className={classes.header} title=\"Mail Us Your Queries\" />\n                    <CardContent>\n                        <div>\n                            <TextField\n                                error={error}\n                                fullWidth\n                                id=\"username\"\n                                type=\"email\"\n                                label=\"Username\"\n                                placeholder=\"Username\"\n                                margin=\"normal\"\n                                onChange={(e) => setUsername(e.target.value)}\n                                onKeyPress={(e) => handleKeyPress(e)}\n                            />\n                            <TextField\n                                error={error}\n                                fullWidth\n                                id=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                margin=\"normal\"\n                                helperText={helperText}\n                                onChange={(e) => setPassword(e.target.value)}\n                                onKeyPress={(e) => handleKeyPress(e)}\n                            />\n                        </div>\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"secondary\"\n                            className={classes.loginBtn}\n                            onClick={handleLogin}\n                            disabled={isButtonDisabled}>\n                            Login\n            </Button>\n            <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"secondary\"\n                            className={classes.signupBtn}\n                            onClick={handleSignup}\n                            >\n                            Sign Up\n            </Button>\n                    </CardActions>\n                </Card>\n            </form>\n        </React.Fragment>\n    );\n}\n\nexport default SectionFooter;"]},"metadata":{},"sourceType":"module"}