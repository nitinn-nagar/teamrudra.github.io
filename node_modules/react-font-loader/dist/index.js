'use strict';var react=require("react"),propTypes=require("prop-types");function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var createElement=function(a){var b=a.reduce(function(a,b){var c=b.name.replace(" ","+"),d=b.weight&&":".concat(b.weight.join(","))||"";return[].concat(_toConsumableArray(a),["".concat(c).concat(d)])},[]).join("|"),c=document.createElement("link");return c.rel="stylesheet",c.href="https://fonts.googleapis.com/css?family=".concat(b),c},ReactFontLoader=function(a){var b=a.fonts;return react.useEffect(function(){var a=createElement(b);return document.head.appendChild(a),function(){return document.head.removeChild(a)}},[]),null};ReactFontLoader.propTypes={fonts:propTypes.arrayOf(propTypes.shape({name:propTypes.string.isRequired,weights:propTypes.arrayOf(propTypes.oneOfType([propTypes.string,propTypes.number]))})).isRequired},module.exports=ReactFontLoader;
